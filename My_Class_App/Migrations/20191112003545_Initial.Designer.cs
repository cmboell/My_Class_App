// <auto-generated />
using My_Classes_App.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ch16Ex1Bookstore.Migrations
{
    [DbContext(typeof(BookstoreContext))]
    [Migration("20191112003545_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0-preview2.19525.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("My_Classes_App.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            FirstName = "Michelle",
                            LastName = "Alexander"
                        },
                        new
                        {
                            TeacherId = 2,
                            FirstName = "Stephen E.",
                            LastName = "Ambrose"
                        },
                        new
                        {
                            TeacherId = 3,
                            FirstName = "Margaret",
                            LastName = "Atwood"
                        },
                        new
                        {
                            TeacherId = 4,
                            FirstName = "Jane",
                            LastName = "Austen"
                        },
                        new
                        {
                            TeacherId = 5,
                            FirstName = "James",
                            LastName = "Baldwin"
                        },
                        new
                        {
                            TeacherId = 6,
                            FirstName = "Emily",
                            LastName = "Bronte"
                        },
                        new
                        {
                            TeacherId = 7,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        },
                        new
                        {
                            TeacherId = 8,
                            FirstName = "Ta-Nehisi",
                            LastName = "Coates"
                        },
                        new
                        {
                            TeacherId = 9,
                            FirstName = "Jared",
                            LastName = "Diamond"
                        },
                        new
                        {
                            TeacherId = 10,
                            FirstName = "Joan",
                            LastName = "Didion"
                        },
                        new
                        {
                            TeacherId = 11,
                            FirstName = "Daphne",
                            LastName = "Du Maurier"
                        },
                        new
                        {
                            TeacherId = 12,
                            FirstName = "Tina",
                            LastName = "Fey"
                        },
                        new
                        {
                            TeacherId = 13,
                            FirstName = "Roxane",
                            LastName = "Gay"
                        },
                        new
                        {
                            TeacherId = 14,
                            FirstName = "Dashiel",
                            LastName = "Hammett"
                        },
                        new
                        {
                            TeacherId = 15,
                            FirstName = "Frank",
                            LastName = "Herbert"
                        },
                        new
                        {
                            TeacherId = 16,
                            FirstName = "Aldous",
                            LastName = "Huxley"
                        },
                        new
                        {
                            TeacherId = 17,
                            FirstName = "Stieg",
                            LastName = "Larsson"
                        },
                        new
                        {
                            TeacherId = 18,
                            FirstName = "David",
                            LastName = "McCullough"
                        },
                        new
                        {
                            TeacherId = 19,
                            FirstName = "Toni",
                            LastName = "Morrison"
                        },
                        new
                        {
                            TeacherId = 20,
                            FirstName = "George",
                            LastName = "Orwell"
                        },
                        new
                        {
                            TeacherId = 21,
                            FirstName = "Mary",
                            LastName = "Shelley"
                        },
                        new
                        {
                            TeacherId = 22,
                            FirstName = "Sun",
                            LastName = "Tzu"
                        },
                        new
                        {
                            TeacherId = 23,
                            FirstName = "Augusten",
                            LastName = "Burroughs"
                        },
                        new
                        {
                            TeacherId = 25,
                            FirstName = "JK",
                            LastName = "Rowling"
                        },
                        new
                        {
                            TeacherId = 26,
                            FirstName = "Seth",
                            LastName = "Grahame-Smith"
                        });
                });

            modelBuilder.Entity("My_Classes_App.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("StartDate")
                        .HasColumnType("float");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ClassId");

                    b.HasIndex("ClassTypeId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassTypeId = "history",
                            StartDate = 18.0,
                            ClassName = "1776"
                        },
                        new
                        {
                            ClassId = 2,
                            ClassTypeId = "scifi",
                            StartDate = 5.5,
                            ClassName = "1984"
                        },
                        new
                        {
                            ClassId = 3,
                            ClassTypeId = "mystery",
                            StartDate = 4.5,
                            ClassName = "And Then There Were None"
                        },
                        new
                        {
                            ClassId = 4,
                            ClassTypeId = "history",
                            StartDate = 11.5,
                            ClassName = "Band of Brothers"
                        },
                        new
                        {
                            ClassId = 5,
                            ClassTypeId = "novel",
                            StartDate = 10.99,
                            ClassName = "Beloved"
                        },
                        new
                        {
                            ClassId = 6,
                            ClassTypeId = "memoir",
                            StartDate = 13.5,
                            ClassName = "Between the World and Me"
                        },
                        new
                        {
                            ClassId = 7,
                            ClassTypeId = "memoir",
                            StartDate = 4.25,
                            ClassName = "Bossypants"
                        },
                        new
                        {
                            ClassId = 8,
                            ClassTypeId = "scifi",
                            StartDate = 16.25,
                            ClassName = "Brave New World"
                        },
                        new
                        {
                            ClassId = 9,
                            ClassTypeId = "history",
                            StartDate = 15.0,
                            ClassName = "D-Day"
                        },
                        new
                        {
                            ClassId = 10,
                            ClassTypeId = "memoir",
                            StartDate = 12.5,
                            ClassName = "Down and Out in Paris and London"
                        },
                        new
                        {
                            ClassId = 11,
                            ClassTypeId = "scifi",
                            StartDate = 8.75,
                            ClassName = "Dune"
                        },
                        new
                        {
                            ClassId = 12,
                            ClassTypeId = "novel",
                            StartDate = 9.0,
                            ClassName = "Emma"
                        },
                        new
                        {
                            ClassId = 13,
                            ClassTypeId = "scifi",
                            StartDate = 6.5,
                            ClassName = "Frankenstein"
                        },
                        new
                        {
                            ClassId = 14,
                            ClassTypeId = "novel",
                            StartDate = 10.25,
                            ClassName = "Go Tell it on the Mountain"
                        },
                        new
                        {
                            ClassId = 15,
                            ClassTypeId = "history",
                            StartDate = 15.5,
                            ClassName = "Guns, Germs, and Steel"
                        },
                        new
                        {
                            ClassId = 16,
                            ClassTypeId = "memoir",
                            StartDate = 14.5,
                            ClassName = "Hunger"
                        },
                        new
                        {
                            ClassId = 17,
                            ClassTypeId = "mystery",
                            StartDate = 6.75,
                            ClassName = "Murder on the Orient Express"
                        },
                        new
                        {
                            ClassId = 18,
                            ClassTypeId = "novel",
                            StartDate = 8.5,
                            ClassName = "Pride and Prejudice"
                        },
                        new
                        {
                            ClassId = 19,
                            ClassTypeId = "mystery",
                            StartDate = 10.99,
                            ClassName = "Rebecca"
                        },
                        new
                        {
                            ClassId = 20,
                            ClassTypeId = "history",
                            StartDate = 5.75,
                            ClassName = "The Art of War"
                        },
                        new
                        {
                            ClassId = 21,
                            ClassTypeId = "mystery",
                            StartDate = 8.5,
                            ClassName = "The Girl with the Dragon Tattoo"
                        },
                        new
                        {
                            ClassId = 22,
                            ClassTypeId = "scifi",
                            StartDate = 12.5,
                            ClassName = "The Handmaid's Tale"
                        },
                        new
                        {
                            ClassId = 23,
                            ClassTypeId = "mystery",
                            StartDate = 10.99,
                            ClassName = "The Maltese Falcon"
                        },
                        new
                        {
                            ClassId = 24,
                            ClassTypeId = "history",
                            StartDate = 13.75,
                            ClassName = "The New Jim Crow"
                        },
                        new
                        {
                            ClassId = 25,
                            ClassTypeId = "memoir",
                            StartDate = 13.5,
                            ClassName = "The Year of Magical Thinking"
                        },
                        new
                        {
                            ClassId = 26,
                            ClassTypeId = "novel",
                            StartDate = 9.0,
                            ClassName = "Wuthering Heights"
                        },
                        new
                        {
                            ClassId = 27,
                            ClassTypeId = "memoir",
                            StartDate = 11.0,
                            ClassName = "Running With Scissors"
                        },
                        new
                        {
                            ClassId = 28,
                            ClassTypeId = "novel",
                            StartDate = 8.75,
                            ClassName = "Pride and Prejudice and Zombies"
                        },
                        new
                        {
                            ClassId = 29,
                            ClassTypeId = "novel",
                            StartDate = 9.75,
                            ClassName = "Harry Potter and the Sorcerer's Stone"
                        });
                });

            modelBuilder.Entity("My_Classes_App.Models.ClassTeacher", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("ClassId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassTeachers");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            TeacherId = 18
                        },
                        new
                        {
                            ClassId = 2,
                            TeacherId = 20
                        },
                        new
                        {
                            ClassId = 3,
                            TeacherId = 7
                        },
                        new
                        {
                            ClassId = 4,
                            TeacherId = 2
                        },
                        new
                        {
                            ClassId = 5,
                            TeacherId = 19
                        },
                        new
                        {
                            ClassId = 6,
                            TeacherId = 8
                        },
                        new
                        {
                            ClassId = 7,
                            TeacherId = 12
                        },
                        new
                        {
                            ClassId = 8,
                            TeacherId = 16
                        },
                        new
                        {
                            ClassId = 9,
                            TeacherId = 2
                        },
                        new
                        {
                            ClassId = 10,
                            TeacherId = 20
                        },
                        new
                        {
                            ClassId = 11,
                            TeacherId = 15
                        },
                        new
                        {
                            ClassId = 12,
                            TeacherId = 4
                        },
                        new
                        {
                            ClassId = 13,
                            TeacherId = 21
                        },
                        new
                        {
                            ClassId = 14,
                            TeacherId = 5
                        },
                        new
                        {
                            ClassId = 15,
                            TeacherId = 9
                        },
                        new
                        {
                            ClassId = 16,
                            TeacherId = 13
                        },
                        new
                        {
                            ClassId = 17,
                            TeacherId = 7
                        },
                        new
                        {
                            ClassId = 18,
                            TeacherId = 4
                        },
                        new
                        {
                            ClassId = 19,
                            TeacherId = 11
                        },
                        new
                        {
                            ClassId = 20,
                            TeacherId = 22
                        },
                        new
                        {
                            ClassId = 21,
                            TeacherId = 17
                        },
                        new
                        {
                            ClassId = 22,
                            TeacherId = 3
                        },
                        new
                        {
                            ClassId = 23,
                            TeacherId = 14
                        },
                        new
                        {
                            ClassId = 24,
                            TeacherId = 1
                        },
                        new
                        {
                            ClassId = 25,
                            TeacherId = 10
                        },
                        new
                        {
                            ClassId = 26,
                            TeacherId = 6
                        },
                        new
                        {
                            ClassId = 27,
                            TeacherId = 23
                        },
                        new
                        {
                            ClassId = 28,
                            TeacherId = 4
                        },
                        new
                        {
                            ClassId = 28,
                            TeacherId = 26
                        },
                        new
                        {
                            ClassId = 29,
                            TeacherId = 25
                        });
                });

            modelBuilder.Entity("My_Classes_App.Models.ClassType", b =>
                {
                    b.Property<string>("ClassTypeId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("ClassTypeId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            ClassTypeId = "novel",
                            Name = "Novel"
                        },
                        new
                        {
                            ClassTypeId = "memoir",
                            Name = "Memoir"
                        },
                        new
                        {
                            ClassTypeId = "mystery",
                            Name = "Mystery"
                        },
                        new
                        {
                            ClassTypeId = "scifi",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            ClassTypeId = "history",
                            Name = "History"
                        });
                });

            modelBuilder.Entity("My_Classes_App.Models.Class", b =>
                {
                    b.HasOne("My_Classes_App.Models.ClassType", "ClassType")
                        .WithMany("Classes")
                        .HasForeignKey("ClassTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("My_Classes_App.Models.ClassTeacher", b =>
                {
                    b.HasOne("My_Classes_App.Models.Teacher", "Teacher")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("My_Classes_App.Models.Class", "Class")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
