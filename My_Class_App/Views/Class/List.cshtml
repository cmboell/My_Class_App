@model ClassListViewModel
<!--classes view -->
@{
    ViewData["ClassTitle"] = " | Class Catalog";

    //make paging sorting and filtering code shorter
    RouteDictionary current = Model.CurrentRoute;
    RouteDictionary routes = Model.CurrentRoute.Clone();
}

<h1>Classes</h1>
<!--filters-->
<form asp-action="Filter" method="post" class="form-inline">
    <label>Teacher: </label>
    <select name="filter" class="form-control m-2"
            asp-items="@(new SelectList(
            Model.Teachers, "TeacherId", "FullName", current.TeacherFilter))">
        <option value="@ClassesGridDTO.DefaultFilter">All</option>
    </select>
    <label>Class Type: </label>
    <select name="filter" class="form-control m-2"
            asp-items="@(new SelectList(
            Model.ClassTypes, "ClassTypeId", "Name", current.ClassTypeFilter))">
        <option value="@ClassesGridDTO.DefaultFilter">All</option>
    </select>

    <label>Number Of Credits: </label>
    <select name="filter" class="form-control m-2"
            asp-items="@(new SelectList(
            Model.Credits, "Key", "Value", current.CreditFilter))">
        <option value="@ClassesGridDTO.DefaultFilter">All</option>
    </select>
    <button type="submit" class="btn btn-primary mr-2">Filter</button>
    <button type="submit" class="btn btn-primary" name="clear" value="true">Clear</button>
</form>
<!--add class to  my classes-->
<form asp-action="Add" asp-controller="MyClass" method="post">
    <table class="table table-bordered table-striped table-sm">
        <thead class="thead-dark">
            <tr>
                <th>
                    @{ routes.SetSortAndDirection(nameof(Class.ClassTitle), current); }
                    <a asp-action="List" asp-all-route-data="@routes"
                       class="text-white">Class Title</a>
                </th>
                <th>Teacher</th>
                <th>
                    @{ routes.SetSortAndDirection(nameof(ClassType), current); }
                    <a asp-action="List" asp-all-route-data="@routes"
                       class="text-white">Class Type</a>
                </th>
                <th>
                    @{ routes.SetSortAndDirection(nameof(Class.NumberOfCredits), current); }
                    <a asp-action="List" asp-all-route-data="@routes"
                       class="text-white">Number Of Credits</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Class class1 in Model.Classes)
            {
                <tr>
                    <td>
                        <a asp-action="Details" asp-route-id="@class1.ClassId"
                           asp-route-slug="@class1.ClassTitle.Slug()">
                            @class1.ClassTitle
                        </a>
                    </td>
                    <td>
                        @foreach (var ct in class1.ClassTeachers)
                        {
                            <p>
                                <a asp-action="Details" asp-controller="Teacher"
                                   asp-route-id="@ct.TeacherId"
                                   asp-route-slug="@ct.Teacher.FullName.Slug()">
                                    @ct.Teacher.FullName </a>
                            </p>
                        }
                    </td>
                    <td>@class1.ClassType?.Name</td>
                    <td>@class1.NumberOfCredits.ToString()</td>
                    <td>
                        <button type="submit" name="id" value="@class1.ClassId">Add To My Classes</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>
@{
    routes = Model.CurrentRoute.Clone();

    for (int i = 1; i <= Model.TotalPages; i++)
    {
        routes.PageNumber = i;
        <a asp-action="List" asp-all-route-data="@routes" class="btn btn-outline-dark @Nav.Active(i, current.PageNumber)">@i</a>
    }
}
